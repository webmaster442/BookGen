using Bookgen.Lib.Domain.IO.Configuration;
using Bookgen.Lib.ImageService;

namespace Bookgen.Tests.Lib;

[TestFixture]
internal class UT_ImgService
{
    private EmbeddedTestFileSystem _testFolder;

    [SetUp]
    public void Setup()
    {
        _testFolder = new EmbeddedTestFileSystem();
    }

    [Test]
    public void EnsureThat_SvgPassThroughReturnsExpected()
    {
        var service = new ImgService(_testFolder, new ImageConfig
        {
            ResizeAndRecodeImagesToWebp = false,
            SvgRecode = SvgRecodeOption.Passtrough,
        });

        var result = service.GetImageEmbedData("test.svg");

        string expected = """
            <?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
            <svg id="svg2" width="620" height="472" xmlns="http://www.w3.org/2000/svg" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:xlink="http://www.w3.org/1999/xlink">
             <defs id="defs4">
              <path id="box1" d="m0 0h77v210h-77z" stroke="#000" stroke-width="2"/>
              <path id="box2" d="m0 0h77v60h-77z" stroke="#000" stroke-width="2"/>
             </defs>
             <path id="bg" d="m0 0h620v472h-620z" fill="#fff"/>
            <g font-family="DejaVu Sans, Arial, Helvetica" stroke-width="1" xml:space="preserve">
             <g id="g9" transform="translate(2 1)">
              <use id="use11" fill="#fff" xlink:href="#box1"/>
              <use id="use13" x="77" fill="#ff0" xlink:href="#box1"/>
              <use id="use15" x="154" fill="#0ff" xlink:href="#box1"/>
              <use id="use17" x="231" fill="#0f0" xlink:href="#box1"/>
              <use id="use19" x="308" fill="#f0f" xlink:href="#box1"/>
              <use id="use21" x="385" fill="red" xlink:href="#box1"/>
              <use id="use23" x="462" fill="#00f" xlink:href="#box1"/>
              <use id="use25" x="539" xlink:href="#box1"/>
             </g>
             <g id="g45" transform="translate(2 220)">
              <use id="use47" fill="#0f0" xlink:href="#box2"/>
              <use id="use49" x="77" fill="#0f0" xlink:href="#box2"/>
              <use id="use51" x="154" fill="#0f0" xlink:href="#box2"/>
              <use id="use53" x="231" fill="#0f0" xlink:href="#box2"/>
              <use id="use55" x="308" fill="#fff" xlink:href="#box2"/>
              <use id="use57" x="385" fill="#fff" xlink:href="#box2"/>
              <use id="use59" x="462" fill="#fff" xlink:href="#box2"/>
              <use id="use61" x="539" fill="#fff" xlink:href="#box2"/>
              <text id="green100" x="30" y="35" fill="#fff">0.59</text>
             </g>
             <g id="g27" transform="translate(2 280)">
              <use id="use29" fill="red" xlink:href="#box2"/>
              <use id="use31" x="77" fill="red" xlink:href="#box2"/>
              <use id="use33" x="154" fill="#fff" xlink:href="#box2"/>
              <use id="use35" x="231" fill="#fff" xlink:href="#box2"/>
              <use id="use37" x="308" fill="red" xlink:href="#box2"/>
              <use id="use39" x="385" fill="red" xlink:href="#box2"/>
              <use id="use41" x="462" fill="#fff" xlink:href="#box2"/>
              <use id="use43" x="539" fill="#fff" xlink:href="#box2"/>
              <text id="red100" x="20" y="35" fill="#fff">+0.30</text>
             </g>
             <g id="g63" transform="translate(2 340)">
              <use id="use65" fill="#00f" xlink:href="#box2"/>
              <use id="use67" x="77" fill="#fff" xlink:href="#box2"/>
              <use id="use69" x="154" fill="#00f" xlink:href="#box2"/>
              <use id="use71" x="231" fill="#fff" xlink:href="#box2"/>
              <use id="use73" x="308" fill="#00f" xlink:href="#box2"/>
              <use id="use75" x="385" fill="#fff" xlink:href="#box2"/>
              <use id="use77" x="462" fill="#00f" xlink:href="#box2"/>
              <use id="use79" x="539" fill="#fff" xlink:href="#box2"/>
              <text id="blue100" x="20" y="35" fill="#fff">+0.11</text>
             </g>
             <g id="g63" transform="translate(2 410)">
              <use id="grey100" fill="#fff" xlink:href="#box2"/>
              <use id="grey89" x="77" fill="#e3e3e3" xlink:href="#box2"/>
              <use id="grey70" x="154" fill="#b2b2b2" xlink:href="#box2"/>
              <use id="grey59" x="231" fill="#969696" xlink:href="#box2"/>
              <use id="grey41" x="308" fill="#696969" xlink:href="#box2"/>
              <use id="grey30" x="385" fill="#4d4d4d" xlink:href="#box2"/>
              <use id="grey11" x="462" fill="#1c1c1c" xlink:href="#box2"/>
              <use id="grey0" x="539" fill="#000" xlink:href="#box2"/>
              <text id="txgrey100" x="20" y="35">100%</text>
              <text id="txgrey89" x="102" y="35">89%</text>
              <text id="txgrey70" x="179" y="35">70%</text>
              <text id="txgrey59" x="256" y="35">59%</text>
              <text id="txgrey41" x="333" y="35" fill="#fff">41%</text>
              <text id="txgrey30" x="408" y="35" fill="#fff">30%</text>
              <text id="txgrey11" x="487" y="35" fill="#fff">11%</text>
              <text id="txgrey0" x="569" y="35" fill="#fff">0%</text>
             </g>
             <text id="text3446-0" x="90" y="184" fill="#fff" font-size="180" stroke-width="4">TEST</text>
             <text id="text3446" x="80" y="174" stroke-width="4"><tspan id="tspan3448" x="80" y="174" font-size="180">TEST</tspan></text>
            </g>
            </svg>
            """;

        Assert.Multiple(() =>
        {
            Assert.That(result.imageType, Is.EqualTo(ImageType.Svg));
            Assert.That(result.data, Is.EqualTo(expected));
        });
    }

    [Test]
    public void EnsureThat_Svg_Recode_Webp_ReturnsExpected()
    {
        var service = new ImgService(_testFolder, new ImageConfig
        {
            ResizeAndRecodeImagesToWebp = false,
            SvgRecode = SvgRecodeOption.AsWebp,
        });

        var result = service.GetImageEmbedData("test.svg");

        string expected = """
            
            """;

        Assert.Multiple(() =>
        {
            Assert.That(result.imageType, Is.EqualTo(ImageType.Webp));
            Assert.That(result.data, Is.EqualTo(expected));
        });
    }

    [Test]
    public void EnsureThat_Svg_Recode_Resize_Png_ReturnsExpected()
    {
        var service = new ImgService(_testFolder, new ImageConfig
        {
            ResizeAndRecodeImagesToWebp = false,
            SvgRecode = SvgRecodeOption.AsPng,
            ResizeWith = 200,
            ResizeHeight = 200,
        });

        var result = service.GetImageEmbedData("test.svg");

        string expected = """
            
            """;

        Assert.Multiple(() =>
        {
            Assert.That(result.imageType, Is.EqualTo(ImageType.Png));
            Assert.That(result.data, Is.EqualTo(expected));
        });
    }

    [Test]
    public void EnsureThat_Png_Passtrough()
    {
        var service = new ImgService(_testFolder, new ImageConfig());

        var result = service.GetImageEmbedData("test.png");

        string expected = """
            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
            """;

        Assert.Multiple(() =>
        {
            Assert.That(result.imageType, Is.EqualTo(ImageType.Png));
            Assert.That(result.data, Is.EqualTo(expected));
        });
    }

    [Test]
    public void EnsureThat_Png_Recode_Webp_Works()
    {
        var service = new ImgService(_testFolder, new ImageConfig
        {
            ResizeAndRecodeImagesToWebp = true,
            ResizeHeight = 100,
            ResizeWith = 200,
            WebpQuality = 80,
        });

        var result = service.GetImageEmbedData("test.png");

        string expected = """
            UklGRk4DAABXRUJQVlA4IEIDAADwGgCdASqFAGQAPm0wlkekIqIhJjFbSIANiWkAFs3+I/5t+KvhH/b653/QfKB7Ev4q/gBxpMhT+Jf7P+k/tVqln6U+sn904w7+mf8X0Yf7j7Zvab+Nf2H/te4R/Fv5Z/v/7J/hO2N+wHsIfrGZMdjsdi0Uqfecy3cJxywDWFUxpt4QT07SH7hp3xBg4MVwsKQDBNPjCwBxkPT7Mp+M/cmIVahhT8UUBswH9ax/+8zu5GBRJMmu+x83dkRVoxZVf29uKgrVeXYF3N6wTzX1kKUsrBE6aEVIlew2Gw2Gw2Gu4AD+/EoAhf+WUVaohvcc9ue1u7xAL/zmPXzb/yi9hL5JYpNthVyF/0OWfT1CDBB+ozpW3SZkOYl/Lwan2HdQE1+TmTOUs4PfRBYWX/7SKx+v44b+vi+pyWBuTLRJA0/fnz/nT5ef/pvos9/HQh/+HvHWH/5X4i++lsmt3MvdTRTvU1hRjsFwEokVtbW8qn1U4hntHzebdjmPKyoq6q4EX4bJW1ts3aaKRfzMTApxNr/zGfICp3aInzd/RggsFAYcUym+dc/8SZACjlOSf3CN8+Ay8TuIBn/xi/E0Wx4qZN+eZnHa948zzs6sg8QzCzHsQ3YUlYpEo7MOm8qFxc0kMI0mpP1EbNa1mmr+Yu+5GtitD3BrWdojpfd3NNQZUlG//m49NxMw2qVNkdxChbkM+w7qAmvuiWnNtRMAs72zJBPiqdCU7Hnt2HIe+rncFpzZAm56rVplDgi73ULaYISCYZBAHgwoRBJiuCjwWAXPiZoSfd8YORfVq9tsQ1dxEwqoGtWDyh9WgAsoNFv3EjvNRGIoEyJ+EWcm/+3DaHG46mHmuMxR8CA9igqKKhejIiwepQHBVWEaVQ8FzidCUFxd6/j5j1bbLecMEWVv1RC0yZ92sl8AGwMfrVn2pOWD0T80/atymFJVzltmqbMswNKU9YVD6pE/fKQ+/AJ1zqD9fCpFmVR404rYPcVDurwlTyDcj4s7AHg2Lm0nYo+JIB0xRzalhq1XQVlqTwtY6ZT+eVIMTCBKUXw/rOG4LP5HfMR7BMrMF7ht5MxJ9P6ahOyC5l52urZAAv/juWY5u3oEAAAAAAA=
            """;

        Assert.Multiple(() =>
        {
            Assert.That(result.imageType, Is.EqualTo(ImageType.Webp));
            Assert.That(result.data, Is.EqualTo(expected));
        });
    }
}
